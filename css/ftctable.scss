
@mixin sortSymbolStyle {
  width: 20px;
  height: 20px;
  display: inline-block;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: 50%;
  background-color: transparent;
  content: '';
  margin-right: -20px;
  vertical-align: top;
}

@import './responsetool.scss';

//Base
.table--base {//节点名--状态名
  background:transparent;
  color:#33302e;
  border-collapse: collapse;
  margin: 0 0 20px;
  width: 100%;

  caption {
    margin:0;
    padding:0;
    width:100%;
  }
  th,td {
    padding:8px;
    text-align: left;
    vertical-align: top;
    font-size:18px;
  }
  th {
    font-weight: bold;
  }

  thead th:not([data-disablesort="true"]) {
    cursor:pointer;
    user-select: none;
    padding-right: 20px;
    &[aria-sort='none']::after {
      background-image: url(https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrows-up-down?source=o-icons&format=svg);
      @include sortSymbolStyle;
    }
    &[aria-sort='ascending']::after, &[aria-sort='none']:hover::after {
      background-image: url(https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-up?source=o-icons&format=svg);
      @include sortSymbolStyle;
    }
    &[aria-sort='descending']::after {
      background-image: url(https://www.ft.com/__origami/service/image/v2/images/raw/fticon-v1:arrow-down?source=o-icons&format=svg);
      @include sortSymbolStyle;
    }
    
  }

  
  //Cell :必须要写在table节点内部，否则层叠优先级不够
  .headsub-cell {
    font-weight:normal;
    font-size:16px;
  }
  
  .body-cell--numeric {
    text-align: right;
  }

  //Caption:
  caption {
    font-family: MetricWeb,sans-serif;
    font-size: 18px;
    line-height: 20px;
    font-weight: 600;
    padding-top: 8px;
    padding-bottom: 8px;
    border-bottom: 2px solid #b3a9a0;
    border-top: 2px solid #b3a9a0;
    text-align: center;
    text-transform: uppercase;
  }
  .caption--top {
    caption-side: top;
    margin-bottom:0;
  }
  .caption--bottom {
    caption-side: bottom;
    margin-bottom:0;
  }
}



.table--row-stripes {
  background:#fff1e5;
  thead th {
    background:#fff1e5; //防止scroll的时候会透出滚上来的tbody内容
  }

  caption {
    background:#fff1e5;
  }

  tbody tr:nth-child(even) {
    background:#f2dfce;
  }
}



.table--vertical-lines {
  th:not(:last-child):not(:first-child), td:not(:last-child):not(:first-child) {
    border-left: 1px solid #ccc1b7;
    border-right: 1px solid #ccc1b7;
  }
}


.table--horizontal-lines {
  tr:not(:last-child) {//tr中的非最后一个元素
    border-bottom: 1px solid #ccc1b7;
  }
  thead + tbody,tbody + tfoot {//紧跟在thead后的tbody及tbody后的tfoot要有border-top
    border-top: 2px solid #b3a9a0;
  }
}



.table--responsive-overflow {//此样式就是表格的宽度至少为500px,再小就直接挡住边缘
  margin:0;//普通ftc-table是margin: 0 0 20px;这个是因为width直接可能超出范围，所以左右也为0吧
  min-width: 500px;
  width: 100%;
}



.table--responsive-flat {

  float: left;//表明元素浮动在其所在的块容器左侧
  width:100%;

  *, *:before, *:after {
    box-sizing: border-box;
  } 

  tbody tr th { //这是复制得到的tbody中每行的th,正常情况下都不显示
    display: none;
  }

  @include oGridRespondTo($until:S) {
    thead, tfoot {//当宽度小于S时，不显示thead，也不显示tfoot
      display: none;
    }

    tbody tr { //当宽度小于S,它display为弹性盒；当宽度大于S，它display恢复为正常的table-row
      display: flex;
      flex-flow: row wrap; 
        //flex-flow属性是flex-direction和flex-wrap的简写
        //flex-direction 属性指定了内部元素是如何在 flex 容器中布局的。row表明是从左到右的水平轴
        //flex-wrap 属性指定 flex 元素单行显示还是多行显示 。如果允许换行，这个属性允许你控制行的堆叠方向。wrap表明flex元素允许换行，第一行在上方。
        ///更多关于弹性盒语法:(http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)
      width:100%;
    }

    tbody tr th {
      border-right: 1px solid #ccc1b7;//弹性盒时只有tbody下tr的th有右边框，其他边框都没有
      float:left;
      width:50%;

      border-left:none;
      display: table-cell;
    }

    .body-cell--numeric {//S以下下的numeric单元左对齐，正常情况是右对齐
      text-align: left;
    }
  }
 

  //另外特殊处理：以覆盖处理vertical-lines、horizontal-lines样式
  &.table--vertical-lines tbody tr { 

    td:nth-child(2) {//这个要覆盖正常情况下td:not(:last-child):not(:first-child){barder-left:xx;}
    //因为之前插入了th之后第一个显示的td就是其父元素的第2个子元素
      border-left:none;
    }

    td:not(:last-child):not(:first-child){
      @include oGridRespondTo($until:S) {
        border-left: none;
        border-right: none;
      }
    }

    th:not(:last-child):not(:first-child) {
      @include oGridRespondTo($until:S) {
        border-left: none;
      }
    }
    
  }

  &.table--horizontal-lines {
    @include oGridRespondTo($until:S) {
      thead + tbody  {//小于S时，thead后的tbody上的线要删除，因为现在没有tHead了，所以如果再来个分界线会跟Caption的重合变粗
        border-top: none;
      }
    }
    
  }

}


.wrapper {
  overflow: scroll;
}